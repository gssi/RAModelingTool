

context mymodel!ReferenceArchitecturalModel {
  
  // Every NamedElement must define a name
  constraint HasName {
    
    check : self.referenceArchitecturalName <> ""

    message : "The reference architecture " + self + " must define a name"
    
  }
}

context mymodel!RAComponent {
	
	constraint pubsub {
	    guard:  self.types.name.includes("Broker")
	    check : 
	    self.outgoing.target.types.flatten().forAll(t|t.name="Subscriber") and 
	    self.incoming.source.types.flatten().forAll(t|t.name="Publisher") and
	    self.attributes.name.includesAll(Sequence{"communicationprotocol","topic"})
	    message : "The component  "+self.name+" is a broker and must have outgoing connectors to Subscribers and incoming from Publisher"
	   
	   fix {
		title : "Fix the components"
		do {
	
			self.highlighted := true;
		
		}
	} 
 }
} 

 
 
